<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Checks that all transactions have been generated. Note that if the range gets changed, any dates outside of that range are deleted automatically.</description>
        <name>Check_and_Update_Recurring_Transactions</name>
        <label>Check and Update Recurring Transactions</label>
        <locationX>50</locationX>
        <locationY>518</locationY>
        <actionName>TTSCore</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>endDate</name>
            <value>
                <elementReference>Get_Current_Record.End_Date_Time__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>frequency</name>
            <value>
                <elementReference>Get_Current_Record.Recurrence_Frequency__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>Get_Current_Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>startDate</name>
            <value>
                <elementReference>Get_Current_Record.Start_Date_Time__c</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <decisions>
        <name>Check_Recurrence</name>
        <label>Check Recurrence</label>
        <locationX>182</locationX>
        <locationY>278</locationY>
        <defaultConnectorLabel>Non Recurring</defaultConnectorLabel>
        <rules>
            <name>Recurring</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Record.Recurring__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Record.Recurrence_Frequency__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Current_Record_for_first_Transaction</targetReference>
            </connector>
            <label>Recurring</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>TTS - Subflow for generating recurring transactions {!$Flow.CurrentDateTime}</interviewLabel>
    <label>TTS - Subflow for generating recurring transactions</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets the current Transaction Record</description>
        <name>Get_Current_Record</name>
        <label>Get Current Record</label>
        <locationX>182</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Recurrence</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>TTS_Transaction__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Current_Record_for_first_Transaction</name>
        <label>Update Current Record for first Transaction</label>
        <locationX>50</locationX>
        <locationY>398</locationY>
        <connector>
            <targetReference>Check_and_Update_Recurring_Transactions</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Current_Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>IP_Expected_Payment_Date__c</field>
            <value>
                <elementReference>Get_Current_Record.Start_Date_Time__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IP_Transaction_Date_Time__c</field>
            <value>
                <elementReference>Get_Current_Record.Start_Date_Time__c</elementReference>
            </value>
        </inputAssignments>
        <object>TTS_Transaction__c</object>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Current_Record</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RecurrenceDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
